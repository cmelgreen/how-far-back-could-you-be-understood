{"version":3,"sources":["Components/Input/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","useState","text","setText","result","setResult","Box","TextField","id","value","onChange","e","target","variant","multiline","rows","Button","onClick","words","replace","split","console","log","axios","get","params","then","resp","data","catch","map","res","i","Typography","word","firstUse","App","theme","createMuiTheme","root","margin","textAlign","palette","type","primary","main","secondary","textPrimary","typography","fontFamily","fontSmoothing","justifyText","CssBaseline","ThemeProvider","align","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAUe,SAASA,EAAMC,GAAQ,IAAD,EACTC,qBADS,mBAC1BC,EAD0B,KACpBC,EADoB,OAELF,mBAAS,IAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,KAejC,OACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,GAAG,WAAWC,MAAOP,EAAMQ,SAAU,SAAAC,GAAC,OAAIR,EAAQQ,EAAEC,OAAOH,QAAQI,QAAQ,WAAWC,WAAS,EAACC,KAAM,IACjH,cAACC,EAAA,EAAD,CAAQR,GAAG,SAASS,QAZR,WAChB,IAAMC,EAAQhB,EAAKiB,QAAQ,YAAa,IAAIC,MAAM,KAClDC,QAAQC,IAAIJ,GAEZK,IAAMC,IANE,gFAMO,CAAEC,OAAQ,CAACP,WACrBQ,MAAK,SAAAC,GAAI,OAAItB,EAAUsB,EAAKC,SAC5BC,OAAM,SAAAF,GAAI,OAAIN,QAAQC,IAAIK,OAM3B,oBACCvB,EAAO0B,KAAI,SAACC,EAAKC,GAAN,OAAa,eAACC,EAAA,EAAD,WAAqBF,EAAIG,KAAzB,KAAiCH,EAAII,WAApBH,SCoBvCI,MAxCf,WACE,IAAMC,EAAQC,YAAe,CAC3BC,KAAM,CACJC,OAAQ,MACRC,UAAW,UAEbC,QAAS,CACPC,KAAM,QACNC,QAAS,CACPC,KAAM,QAERC,UAAW,CACTD,KAAM,WAERE,YAAa,CACXF,KAAM,SAGVG,WAAY,CAIVC,WAAY,mBACZC,cAAe,cACfC,YAAa,YAGjB,OACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAehB,MAAOA,EAAtB,SACE,eAAC/B,EAAA,EAAD,CAAKgD,MAAM,SAASd,OAAO,MAA3B,UACE,cAACP,EAAA,EAAD,CAAYpB,QAAQ,KAApB,gGACA,cAACoB,EAAA,EAAD,CAAYpB,QAAQ,KAApB,qHACA,cAACP,EAAA,EAAD,CAAKkC,OAAO,KAAZ,SAAiB,cAACzC,EAAD,cC9BZwD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ac0d6446.chunk.js","sourcesContent":["import { useState } from 'react'\n\nimport Box from '@material-ui/core/Box'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\n//import qs from 'qs'\n\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Input(props) {\n    const [text, setText] = useState()\n    const [result, setResult] = useState([])\n\n    const api = \"https://jbqf671y1e.execute-api.us-west-2.amazonaws.com/how-far-back/first-use\"\n\n    const handleClick = () => {\n        const words = text.replace(/[^\\w\\s]/gi, '').split(' ')\n        console.log(words)\n        \n        axios.get(api, { params: {words}})\n            .then(resp => setResult(resp.data))\n            .catch(resp => console.log(resp))\n    }\n\n    return (\n        <Box>\n            <TextField id='text-box' value={text} onChange={e => setText(e.target.value)} variant=\"outlined\" multiline rows={4}/>\n            <Button id='submit' onClick={handleClick} >Submit</Button>\n            {result.map((res, i) => (<Typography key={i}>{res.word}, {res.firstUse}</Typography>))}\n        </Box>\n    )\n}\n\n","import CssBaseline from '@material-ui/core/CssBaseline'\nimport Box from '@material-ui/core/Box'\nimport Typography from '@material-ui/core/Typography'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport Input from './Components/Input/Input'\n\n//import Results from './Components/Results'\n\nfunction App() {\n  const theme = createMuiTheme({\n    root: {\n      margin: \"10%\",\n      textAlign: \"center\"\n    },\n    palette: {\n      type: 'light',\n      primary: {\n        main: '#FFF',\n      },\n      secondary: {\n        main: '#fe5b25',\n      },\n      textPrimary: {\n        main: '#000',\n      },\n    },\n    typography: {\n      //fontFamily: 'Karla',\n      //fontFamily: 'Vollkorn',\n      //fontFamily: 'Lora',\n      fontFamily: 'Frank Ruhl Libre',\n      fontSmoothing: 'antialiased',\n      justifyText: \"center\"\n    },\n  });\n  return (\n    <CssBaseline>\n      <ThemeProvider theme={theme}>\n        <Box align=\"center\" margin=\"10%\">\n          <Typography variant=\"h4\">You could probably understand Shakespeare, but would he be able to understand you?</Typography>\n          <Typography variant=\"h5\">Use Merriam-Webster's first recorded usage to see how far back your words and ideas could be understood</Typography>\n          <Box margin=\"5%\"><Input/></Box>\n        </Box>\n      </ThemeProvider>\n    </CssBaseline>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}